26p 역할과 책임

-객체지향에서 중요한 개념

역할, 책임, 협력 3가지로 상호작용을 한다.

-객체 메시지 메서드에 대한 개념

객체: 상태를 가지고 행동을 할 수 있는 자율적인 존재
ex)손님은 이름,나이(상태)를 가지고 주문한다(행동)을 하기에 객체다.
자동차도 속도,연료량(상태)를 가지고 움직인다(행동)을 하기에 객체다.

메시지: 손님이 캐시어에게 메뉴 주문 한 것

메서드: 메시지를 받으면 요청에 맞는 행동을 실행하는 것

객체는 적당히 협력적이며 적당히 자율적이여야한다.
모든 것을 할려고한다면 코드가 복잡하고 요청에 맞게 판단하게 만들어야 하기 때문

즉, 스스로 판단하는 "자율성" 다른 객체와 주고받는 "협력성"이 중요함.

객체지향의 중심은 객체지 클래스의 구조와 메서드가 아니다.
->객체의 역할 책임 협력에 집중해라. 근본적 구조가 중요하다.

2025.04.28

41p

객체란 구별할 수 있는 것이며, 상태,행동,식별자를 가지고 있다.
ex) 달력이라던가 옆에 있는 오브젝트 책이라던가...

52p

상태

상태는 주어지는 것이고
상태를 알면 현재를 기준으로 결과를 알 수 있다.
어쨋든 키와 문만 알면 키보다 문이 크거나 문보다 키가 작으면 통과되니
복잡하게 이전의 기억(버섯,케이크 먹음)을 알 필요도 없으니 효율적이다.

-프로퍼티 & 프로퍼티 값

객체의 상태를 구성하는 모든 특징을 프로퍼티라고 한다.
프로퍼티는 변경되지 않아 정적이며,
프로퍼티 값은 시간에 따라 변경되기에 동적이다.

-링크
객체와 객체의 의미 있는 연결
ex)위치가 통로일때는 음료와 관련 있지만 정원일때는 관련이 없다.

-속성
객체를 구성하는 단순한 값을 속성이라고 한다.
ex)키나 몸무게 

54p
-행동
행동은 객체가 협력에 참여할 수 있는 유일한 방법이며, 
자신의 상태를 변경하거나 다른 객체에게 메시지를 전달함.

-캡슐화
겉보기만 보이게하고 오직 객체 내부에서만 자율적으로 판단하도록 만든것

-협력
다른 객체와 협력하는 유일한 방법은 요청이고

-쿼리와 명령
쿼리: 객체의 상태를 조회하는 것
명령: 객체의 상태를 변경하는 것

인터페이스에서 쿼리와 명령으로만 객체에 접근가능하다.
